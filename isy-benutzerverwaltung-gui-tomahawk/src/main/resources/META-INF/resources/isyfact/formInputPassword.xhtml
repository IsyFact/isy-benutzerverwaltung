<html xmlns="http://www.w3.org/1999/xhtml" xmlns:composite="http://java.sun.com/jsf/composite"
      xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:jsf="http://xmlns.jcp.org/jsf"
      xmlns:isyi="http://java.sun.com/jsf/composite/isyfact/internal"
>

<!-- Ein Eingabefeld für Passwörter innerhalb von Formularen. -->

<composite:interface>

    <!-- Die Referenz des Objekts. -->
    <composite:attribute name="reference" required="true"/>
    <!-- Der Wert für das Databinding im Eingabefeld -->
    <composite:attribute name="value" required="true"/>
    <!-- Ob die Eingabe ein Pflichteingabe ist. -->
    <composite:attribute name="required" type="Boolean" default="false"/>
    <!-- Ob die Darstellung nur lesend erfolgen soll -->
    <composite:attribute name="readonly" type="Boolean" default="false"/>
    <!-- Der Text für das Label -->
    <composite:attribute name="label" type="String" required="false"/>
    <!-- Die CSS-Klasse für das Label. -->
    <composite:attribute name="labelStyleClass" type="String" default="col-lg-6"/>
    <!-- Die CSS-Klasse für den Eingabebereich. -->
    <composite:attribute name="inputStyleClass" type="String" default="col-lg-6"/>
    <!-- Der Platzhalter, welcher im Eingabefeld angezeigt wird. -->
    <composite:attribute name="placeholder" type="String" required="false"/>
    <!-- Die Eingabemaske.-->
    <composite:attribute name="inputmask" type="String" required="false"/>
    <!-- Die maximale Länge der Eingabe. -->
    <composite:attribute name="maxlength" type="Integer" required="false" default="255"/>

    <!-- Ein spezifisches Validation-Model, falls benötigt. -->
    <composite:attribute name="validationModel" required="false" default="#{validationModel}"/>
    <!-- Eine spezifsche globale Konfiguration, falls benötigt. -->
    <composite:attribute name="globalConfig" required="false" default="#{globalConfigurationModel}"/>

</composite:interface>

<composite:implementation>

    <!-- Validierungsfehler bestimmen -->
    <ui:param name="validationMessages"
              value="#{cc.attrs.validationModel.getValidationMessagesForReference(cc.attrs.reference)}"/>
    <ui:param name="existsValidationError" value="#{not empty validationMessages}"/>

    <div class="form-group#{existsValidationError ? ' has-error has-feedback': ''}">

        <isyi:formValidationLabel value="#{cc.attrs.label}"
                                  forField="#{cc.clientId}:#{jsfHelper.escapeIdentifier(cc.attrs.reference)}"
                                  required="#{cc.attrs.required}" styleClass="#{cc.attrs.labelStyleClass}"/>

        <div class="#{cc.attrs.inputStyleClass}">
            <div>
                <ui:fragment rendered="#{not cc.attrs.readonly}">
                    <input type="password" class="form-control#{existsValidationError ? ' invalid': ''}"
                           jsf:id="#{jsfHelper.escapeIdentifier(cc.attrs.reference)}"
                           placeholder="#{cc.attrs.placeholder}" jsf:value="#{cc.attrs.value}"
                           inputmask="#{cc.attrs.inputmask}" maxlength="#{cc.attrs.maxlength}">
                        <composite:insertChildren/>
                    </input>
                </ui:fragment>
                <ui:fragment rendered="#{cc.attrs.readonly}">
                    <input type="password" class="form-control readonly"
                           jsf:id="readonly_#{jsfHelper.escapeIdentifier(cc.attrs.reference)}"
                           readonly="readonly"
                           jsf:value="#{cc.attrs.value}" inputmask="#{cc.attrs.inputmask}"/>
                </ui:fragment>
            </div>
        </div>

        <!-- Bei Validierungsfehlern -->
        <isyi:formValidationIcon validationModel="#{cc.attrs.validationModel}"
                                 reference="#{cc.attrs.reference}" inputGroupAddonExistent="false"/>
    </div>
</composite:implementation>

</html>
